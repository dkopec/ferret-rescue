name: Build Godot Project

# Whenever a tag push matching pattern "v*" then run the job
on:
  push:
    # tags:
    #   - "v*"

jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
      # Always include the checkout step so that
      # your project is available for Godot to export
    - name: checkout
      uses: actions/checkout@v3.3.0

    - name: ü§ñ Setup Godot
      shell: pwsh
      env:
        GODOT_VERSION: 4.1.3
      run: |
        $version = $env:GODOT_VERSION
        $url = "https://github.com/godotengine/godot/releases/download/$version-stable/Godot_v$version-stable_linux.x86_64.zip"
        $tmp = "$([System.IO.Path]::GetTempPath())godot.zip"
        $dest = "/opt/godot"
        Invoke-WebRequest -Uri $url -OutFile $tmp
        Expand-Archive -LiteralPath $tmp -DestinationPath $dest
        sudo chmod +x $dest

    - name: üöÄ Export Game
      id: export
      shell: pwsh
      env:
        GODOT_EXPORT_VERSION: "${{ github.ref.id }}"
        GODOT_EXPORT_DIR: "${{ runner.temp }}/godot_build"
      run: |
        mkdir $env:GODOT_EXPORT_DIR
        ./export_web.ps1
        ./export_windows.ps1
        echo "archive_directory=$env:GODOT_EXPORT_DIR" >> $GITHUB_OUTPUT

      # This release action has worked well for me. However, you can most likely use any release action of your choosing.
      # https://github.com/ncipollo/release-action
    - name: üèÅ Create Release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*