name: Build Godot Project

# Whenever a tag push matching pattern "v*" then run the job
on:
  push:
    # tags:
    #   - "v*"

env:
  GODOT_VERSION: "3.5.3"
  RELEASE_NAME: "stable"
  GODOT_PLATFORM: "linux.x86_64"

jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
      # Always include the checkout step so that
      # your project is available for Godot to export
    - name: checkout
      uses: actions/checkout@v3.3.0

    - name: 🤖 Setup Godot
      run: |
        wget https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}${SUBDIR}/Godot_v${GODOT_VERSION}-${RELEASE_NAME}_${GODOT_PLATFORM}.zip
        wget https://downloads.tuxfamily.org/godotengine/${GODOT_VERSION}${SUBDIR}/Godot_v${GODOT_VERSION}-${RELEASE_NAME}_export_templates.tpz
        mkdir ~/.cache
        mkdir -p ~/.config/godot
        mkdir -p ~/.local/share/godot/templates/${GODOT_VERSION}.${RELEASE_NAME}
        ln -s ~/.local/share/godot/templates ~/.local/share/godot/export_templates
        unzip Godot_v${GODOT_VERSION}-${RELEASE_NAME}_${GODOT_PLATFORM}.zip
        mv Godot_v${GODOT_VERSION}-${RELEASE_NAME}_${GODOT_PLATFORM} /usr/local/bin/godot
        unzip Godot_v${GODOT_VERSION}-${RELEASE_NAME}_export_templates.tpz
        mv templates/* ~/.local/share/godot/templates/${GODOT_VERSION}.${RELEASE_NAME}
        rm -f Godot_v${GODOT_VERSION}-${RELEASE_NAME}_export_templates.tpz Godot_v${GODOT_VERSION}-${RELEASE_NAME}_${GODOT_PLATFORM}.zip
        mkdir -v -p ~/.local/share/godot/export_templates
        mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
        ls ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

    - name: ⚙ Export Game
      id: export
      env:
        GODOT_EXPORT_VERSION: "${{ github.ref.id }}"
        GODOT_EXPORT_DIR: "build/web"
      run: |
        set -e
        mkdir -v -p $GODOT_EXPORT_DIR
        ls -lsa
        godot --headless --export-release "HTML5" "$GODOT_EXPORT_DIR\index.html"
        zip  "$GODOT_EXPORT_DIR\ferret_rescure_$GODOT_EXPORT_VERSION.zip" "$GODOT_EXPORT_DIR\*"
        echo "archive_directory=$GODOT_EXPORT_DIR" >> $GITHUB_OUTPUT

      # This release action has worked well for me. However, you can most likely use any release action of your choosing.
      # https://github.com/ncipollo/release-action
    - name: 🏁 Create Release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*.zip

    - name: Deploy to GitHub Pages 🚀
      uses: JamesIves/github-pages-deploy-action@releases/v4
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: build/web # The folder the action should deploy.